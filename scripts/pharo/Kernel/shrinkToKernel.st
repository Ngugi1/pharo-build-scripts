'From Pharo1.4a of ''16 June 2011'' [Latest update: #14155] on 20 September 2011 at 11:10:09 am'!!SmalltalkImage methodsFor: 'PharoKernel-private' stamp: 'PavelKrivanek 9/20/2011 11:07'!privCleanUnloadMethods  " remove class unload methods to avoid their calling during removing of this classes "  #(#Browser #ChangeList #ChangeSorter #DummySoundSystem #FT2Handle   #FileContentsBrowser #GZipReadStream #GZipWriteStream #MCVersionReader   #MailComposition #Morph #SARInstaller #TTCFont #TTFontReader #FreeTypeFontProvider  #DefaultExternalDropHandler #FileStream #Form)     do: [:className | (Smalltalk at: className) class removeSelector: #unload. ].! !'From Pharo1.4a of ''16 June 2011'' [Latest update: #14155] on 20 September 2011 at 11:52:35 am'!!SystemNavigation methodsFor: 'packages' stamp: 'PavelKrivanek 9/20/2011 11:52'!removeAllButPackages: packagesList  "Remove all classes and methods that do not belong to some of listed packages. Skip #unload. Do not use this method if you can use Monticello!! This method is used by some low-level shrinking process. Do not use it. This is quite hackish"  | keep remove oldRemove extensionCategories log |  keep := Set new.        packagesList do: [:pkg | keep addAll: (self allClassesInPackageNamed: pkg)].  oldRemove := Set new.  [     remove := Smalltalk globals allClassesAndTraits reject: [:c | keep includes: c].    remove := remove collect: [:c | c name].    (remove asSortedCollection: [:a :b | a  <= b ]) do: [:className |      | class |      class := (Smalltalk globals classOrTraitNamed: className).      class allSubclasses ifEmpty: [        SystemChangeNotifier uniqueInstance noMoreNotificationsFor: class.        class isTrait ifFalse: [           (class class includesSelector: #unload) ifTrue: [ class removeSelector: #unload ] ].        class removeFromSystem.         ] ].        oldRemove ifNotEmpty: [      oldRemove = remove ifTrue: [                   self error: 'Some classes still have subclasses: ', (remove collect: [:c | c -> (Smalltalk classOrTraitNamed: c) allSubclasses]) asString ] ].    oldRemove := remove.    remove notEmpty] whileTrue.  keep do: [: class |     extensionCategories := (class organization categories select: [:category |       category first = $*]) asOrderedCollection.    extensionCategories removeAllSuchThat: [:category |      packagesList anySatisfy: [:package |        ((category asLowercase allButFirst = package asLowercase) or: [package asLowercase, '-*' match: category asLowercase allButFirst])]].    extensionCategories do: [:category |       class removeCategory: category ].     class isTrait ifFalse: [      extensionCategories := (class class organization categories select: [:category |         category first = $*]) asOrderedCollection.      extensionCategories removeAllSuchThat: [:category |        packagesList anySatisfy: [:package |          ((category asLowercase allButFirst = package asLowercase) or: [package asLowercase, '-*' match: category asLowercase allButFirst])]].      extensionCategories do: [:category |         class class removeCategory: category ]]].      ! !TestCase subclass: #ClassQueryTest  instanceVariableNames: ''  classVariableNames: ''  poolDictionaries: ''  category: 'Tests-System'!Smalltalk shrinkToKernel.